{"mappings":"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","sources":["netlify/demo/metrics.js"],"sourcesContent":["/* global $, events, eventLeftMargin, canvasBufferTimeRangeUpdate, canvasBufferWindowUpdate, canvasBitrateEventUpdate,\n   canvasVideoEventUpdate, canvasLoadEventUpdate */\n/* eslint no-var: 0 */\nvar windowDuration = 20000;\nvar windowSliding = true;\nvar windowStart = 0;\nvar windowEnd = 10000;\nvar windowFocus;\nvar metricsDisplayed = false;\nvar timeRangeMouseDown = false;\n\n$('#windowStart').val(windowStart);\n$('#windowEnd').val(windowEnd);\n\nfunction showMetrics() {\n  metricsDisplayed = true;\n  var width = window.innerWidth - 30;\n  $('#bufferWindow_c')[0].width =\n    $('#bitrateTimerange_c')[0].width =\n    $('#bufferTimerange_c')[0].width =\n    $('#videoEvent_c')[0].width =\n    $('#metricsButton')[0].width =\n    $('#loadEvent_c')[0].width =\n      width;\n  $('#bufferWindow_c').show();\n  $('#bitrateTimerange_c').show();\n  $('#bufferTimerange_c').show();\n  $('#videoEvent_c').show();\n  $('#metricsButton').show();\n  $('#loadEvent_c').show();\n}\n\nfunction hideMetrics() {\n  metricsDisplayed = false;\n  $('#bufferWindow_c').hide();\n  $('#bitrateTimerange_c').hide();\n  $('#bufferTimerange_c').hide();\n  $('#videoEvent_c').hide();\n  $('#metricsButton').hide();\n  $('#loadEvent_c').hide();\n}\n\nfunction timeRangeSetSliding(duration) {\n  windowDuration = duration;\n  windowSliding = true;\n  refreshCanvas();\n}\n\nfunction timeRangeCanvasonMouseDown(evt) {\n  var canvas = evt.currentTarget;\n  var bRect = canvas.getBoundingClientRect();\n  var mouseX = Math.round(\n    (evt.clientX - bRect.left) * (canvas.width / bRect.width)\n  );\n  windowStart = Math.max(\n    0,\n    Math.round(\n      ((mouseX - eventLeftMargin) * getWindowTimeRange().now) /\n        (canvas.width - eventLeftMargin)\n    )\n  );\n  windowEnd = windowStart + 500;\n  timeRangeMouseDown = true;\n  windowSliding = false;\n  // console.log('windowStart/windowEnd:' + '/' + windowStart + '/' + windowEnd);\n  $('#windowStart').val(windowStart);\n  $('#windowEnd').val(windowEnd);\n  refreshCanvas();\n}\n\nfunction timeRangeCanvasonMouseMove(evt) {\n  if (timeRangeMouseDown) {\n    var canvas = evt.currentTarget;\n    var bRect = canvas.getBoundingClientRect();\n    var mouseX = Math.round(\n      (evt.clientX - bRect.left) * (canvas.width / bRect.width)\n    );\n    var pos = Math.max(\n      0,\n      Math.round(\n        ((mouseX - eventLeftMargin) * getWindowTimeRange().now) /\n          (canvas.width - eventLeftMargin)\n      )\n    );\n    if (pos < windowStart) {\n      windowStart = pos;\n    } else {\n      windowEnd = pos;\n    }\n    if (windowStart === windowEnd) {\n      // to avoid division by zero ...\n      windowEnd += 50;\n    }\n    // console.log('windowStart/windowEnd:' + '/' + windowStart + '/' + windowEnd);\n    $('#windowStart').val(windowStart);\n    $('#windowEnd').val(windowEnd);\n    refreshCanvas();\n  }\n}\n\nfunction timeRangeCanvasonMouseUp(evt) {\n  timeRangeMouseDown = false;\n}\n\nfunction timeRangeCanvasonMouseOut(evt) {\n  timeRangeMouseDown = false;\n}\n\nfunction windowCanvasonMouseMove(evt) {\n  var canvas = evt.currentTarget;\n  var bRect = canvas.getBoundingClientRect();\n  var mouseX = Math.round(\n    (evt.clientX - bRect.left) * (canvas.width / bRect.width)\n  );\n  var timeRange = getWindowTimeRange();\n  windowFocus =\n    timeRange.min +\n    Math.max(\n      0,\n      Math.round(\n        ((mouseX - eventLeftMargin) * (timeRange.max - timeRange.min)) /\n          (canvas.width - eventLeftMargin)\n      )\n    );\n  // console.log(windowFocus);\n  refreshCanvas();\n}\n\nfunction refreshCanvas() {\n  if (metricsDisplayed) {\n    try {\n      var windowTime = getWindowTimeRange();\n      canvasBufferTimeRangeUpdate(\n        $('#bufferTimerange_c')[0],\n        0,\n        windowTime.now,\n        windowTime.min,\n        windowTime.max,\n        events.buffer\n      );\n      if (windowTime.min !== 0 || windowTime.max !== windowTime.now) {\n        $('#bufferWindow_c').show();\n        canvasBufferWindowUpdate(\n          $('#bufferWindow_c')[0],\n          windowTime.min,\n          windowTime.max,\n          windowTime.focus,\n          events.buffer\n        );\n      } else {\n        $('#bufferWindow_c').hide();\n      }\n      canvasBitrateEventUpdate(\n        $('#bitrateTimerange_c')[0],\n        0,\n        windowTime.now,\n        windowTime.min,\n        windowTime.max,\n        events.level,\n        events.bitrate\n      );\n      canvasVideoEventUpdate(\n        $('#videoEvent_c')[0],\n        windowTime.min,\n        windowTime.max,\n        events.video\n      );\n      canvasLoadEventUpdate(\n        $('#loadEvent_c')[0],\n        windowTime.min,\n        windowTime.max,\n        events.load\n      );\n    } catch (err) {\n      console.log('refreshCanvas error:' + err.message);\n    }\n  }\n}\n\nfunction getWindowTimeRange() {\n  var tnow;\n  var minTime;\n  var maxTime;\n  if (events.buffer.length) {\n    tnow = events.buffer[events.buffer.length - 1].time;\n  } else {\n    tnow = 0;\n  }\n  if (windowSliding) {\n    // let's show the requested window\n    if (windowDuration) {\n      minTime = Math.max(0, tnow - windowDuration);\n      maxTime = Math.min(minTime + windowDuration, tnow);\n    } else {\n      minTime = 0;\n      maxTime = tnow;\n    }\n  } else {\n    minTime = windowStart;\n    maxTime = windowEnd;\n  }\n  if (\n    windowFocus === undefined ||\n    windowFocus < minTime ||\n    windowFocus > maxTime\n  ) {\n    windowFocus = minTime;\n  }\n  return { min: minTime, max: maxTime, now: tnow, focus: windowFocus };\n}\n\nfunction timeRangeZoomIn() {\n  if (windowSliding) {\n    windowDuration /= 2;\n  } else {\n    var duration = windowEnd - windowStart;\n    windowStart += duration / 4;\n    windowEnd -= duration / 4;\n    if (windowStart === windowEnd) {\n      windowEnd += 50;\n    }\n  }\n  $('#windowStart').val(windowStart);\n  $('#windowEnd').val(windowEnd);\n  refreshCanvas();\n}\n\nfunction timeRangeZoomOut() {\n  if (windowSliding) {\n    windowDuration *= 2;\n  } else {\n    var duration = windowEnd - windowStart;\n    windowStart -= duration / 2;\n    windowEnd += duration / 2;\n    windowStart = Math.max(0, windowStart);\n    windowEnd = Math.min(\n      events.buffer[events.buffer.length - 1].time,\n      windowEnd\n    );\n  }\n  $('#windowStart').val(windowStart);\n  $('#windowEnd').val(windowEnd);\n  refreshCanvas();\n}\n\nfunction timeRangeSlideLeft() {\n  var duration = windowEnd - windowStart;\n  windowStart -= duration / 4;\n  windowEnd -= duration / 4;\n  windowStart = Math.max(0, windowStart);\n  windowEnd = Math.min(events.buffer[events.buffer.length - 1].time, windowEnd);\n  $('#windowStart').val(windowStart);\n  $('#windowEnd').val(windowEnd);\n  refreshCanvas();\n}\n\nfunction timeRangeSlideRight() {\n  var duration = windowEnd - windowStart;\n  windowStart += duration / 4;\n  windowEnd += duration / 4;\n  windowStart = Math.max(0, windowStart);\n  windowEnd = Math.min(events.buffer[events.buffer.length - 1].time, windowEnd);\n  $('#windowStart').val(windowStart);\n  $('#windowEnd').val(windowEnd);\n  refreshCanvas();\n}\n"],"names":["windowFocus","windowDuration","windowSliding","windowStart","windowEnd","metricsDisplayed","timeRangeMouseDown","showMetrics","width","window","innerWidth","$","show","hideMetrics","hide","timeRangeSetSliding","duration","refreshCanvas","timeRangeCanvasonMouseDown","evt","canvas","currentTarget","bRect","getBoundingClientRect","mouseX","Math","round","clientX","left","max","eventLeftMargin","getWindowTimeRange","now","val","timeRangeCanvasonMouseMove","pos","timeRangeCanvasonMouseUp","timeRangeCanvasonMouseOut","windowCanvasonMouseMove","timeRange","min","windowTime","canvasBufferTimeRangeUpdate","events","buffer","canvasBufferWindowUpdate","focus","canvasBitrateEventUpdate","level","bitrate","canvasVideoEventUpdate","video","canvasLoadEventUpdate","load","err","console","log","message","tnow","minTime","maxTime","length","time","undefined","timeRangeZoomIn","timeRangeZoomOut","timeRangeSlideLeft","timeRangeSlideRight"],"version":3,"file":"index.23cb19f1.js.map"}